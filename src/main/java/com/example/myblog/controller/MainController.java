package com.example.myblog.controller;

import com.example.myblog.model.User;
import com.example.myblog.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.Arrays;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path="/") // This means URL's start with / (after Application path)
public class MainController implements CommandLineRunner {


    @Autowired // This means to get the bean called userRepository Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

   /*
     returns to the home and display all users
    */
    @RequestMapping(value = "/")
    public String index(HttpServletRequest request, Model model) {
        // display all users
        List<User> users = (List<User>) userRepository.findAll();
        model.addAttribute("users",users);
        return "index";
    }

    @RequestMapping(value = "/viewUser/{userId}")
    public String viewUser(@PathVariable("userId") Integer userId, HttpServletRequest request, Model model){
        User user = userRepository.findById(userId).get();
        model.addAttribute("user",user);
        model.addAttribute("user_id", userId);
        return "viewUser";
    }

    /*
      Open a window to capture the info of the new user
     */
    @RequestMapping(value = "/adduser")
    public String createNewUser(HttpServletRequest request, Model model) {
        model.addAttribute("user",new User());
        List<String> listProfession = Arrays.asList("Developer", "Tester", "Architect");
        model.addAttribute("listProfession", listProfession);
        return "adduser";
    }

    /*
      Saves new user in Database and redirects to a success message
     */
    @PostMapping("/register")
    public String submitForm(@ModelAttribute("user") User user, Model model, HttpServletRequest request) {
        userRepository.save(user);
        model.addAttribute("success_message","New user has registered successfully. Welcome, " + user.getName() +" !" );
        return "user_message";
    }

    @Override
    public void run(String... args) throws Exception {
        userRepository.save(new User(1,"Amr", "amr@mail.com","m"));
        userRepository.save(new User(2,"Naj", "naj@mail.com","f"));
    }
}